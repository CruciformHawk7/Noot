#pragma checksum "/home/nikhil/Code/Noot2/Pages/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c5fc6ec745061be36440a18da3273c53d2886808"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Noot.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/home/nikhil/Code/Noot2/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/nikhil/Code/Noot2/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/nikhil/Code/Noot2/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/nikhil/Code/Noot2/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/nikhil/Code/Noot2/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/home/nikhil/Code/Noot2/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/home/nikhil/Code/Noot2/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/nikhil/Code/Noot2/_Imports.razor"
using Noot;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/nikhil/Code/Noot2/_Imports.razor"
using Noot.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/nikhil/Code/Noot2/Pages/Index.razor"
using Noot.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/nikhil/Code/Noot2/Pages/Index.razor"
using Controllers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/nikhil/Code/Noot2/Pages/Index.razor"
using Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/{AnyPath}")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 75 "/home/nikhil/Code/Noot2/Pages/Index.razor"
       

    List<Note> Notes = new List<Note>();

    private string _search = String.Empty;

    public bool AddBoxVisibility = false;
    private bool isEdit;

    //private bool isSearch;

    private Note NewNote = new Note();

    [Parameter]
    public string AnyPath { get; set; }

    [Parameter]
    public string SearchText { get { return _search; }
        set {
            _search = value;
            //isSearch = String.IsNullOrEmpty(value);
            Notes = NotesController.GetAllNotes()
                    .FindAll( e => e.Title.Contains(value, StringComparison.OrdinalIgnoreCase) 
                                || e.Notes.Contains(value, StringComparison.OrdinalIgnoreCase));
        }
    }
    
    protected override void OnInitialized(){
        //Test();
        Notes = NotesController.GetAllNotes();
    }

    void Test() {
        for(int i = 0; i<10; i++) {
            NotesController.CreateNewNote($"Test {i}", $"Test {i}");
        }
    }

    void AddValue() {
        if (isEdit) 
            NotesController.EditNote(NewNote.Id, NewNote.Title, NewNote.Notes);
        else {
            NotesController.CreateNewNote(NewNote.Title, NewNote.Notes);
        }
        NewNote = new Note();
        AddBoxVisibility = false;
    }

    public void AddNote() {
        AddBoxVisibility = true;
        isEdit = false;
    }

    public void DeleteNote(string Id) {
        NotesController.RemoveNote(Id);
    }

    public void EditNote(string Id) {
        isEdit = true;
        NewNote = NotesController.GetNote(Id);
        AddBoxVisibility = true;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
